// Place your key bindings in this file to override the defaults
[
    {
        "key": "insert m",
        "command": "notebook.cell.insertMarkdownCellBelow"
    },
    {
        "key": "f11",
        "command": "jupyter.runByLineNext",
        "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
    },
    {
        "key": "f10",
        "command": "-jupyter.runByLineNext",
        "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
    },
    // * ================ Adjust View Width and Height ================
    {
        "key": "ctrl+left",
        "command": "workbench.action.decreaseViewWidth",
        "when": "!isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.increaseViewWidth",
        "when": "!isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.decreaseViewHeight",
        "when": "!isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.increaseViewHeight",
        "when": "!isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    // * ================End of View Adjustment ================
    {
        "key": "ctrl+f10",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.terminal.focus",
        "when": "terminalHasBeenCreated && !terminalFocus || terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.focus",
        "when": "terminalHasBeenCreated && !terminalFocus || terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "-git.commitAll",
        "when": "!inDebugMode && !operationInProgress && !terminalFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "actions.find"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.copyLinesUpAction"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.chat.open",
        "when": "!chatSetupDisabled && !chatSetupHidden"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.action.chat.open",
        "when": "!chatSetupDisabled && !chatSetupHidden"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+f12",
        "command": "workbench.action.toggleMaximizedAuxiliaryBar"
    },
    {
        "key": "ctrl+f10",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+escape",
        "command": "-workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-platformio-ide.build",
        "when": "pioProjectReady && pioProjectTasksReady"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+left",
        "command": "-breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordAccessibilityLeft",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+left",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+left",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.left && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+left",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.left && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.right && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+right",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.right && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordAccessibilityRight",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+a",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+f8",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    }
]
